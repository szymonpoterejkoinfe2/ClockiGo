// <auto-generated />
using System;
using ClockiGo.Infrastructure.Presistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClockiGo.Infrastructure.Migrations
{
    [DbContext(typeof(ClockiGoContext))]
    [Migration("20250701200011_NullSupport")]
    partial class NullSupport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClockiGo.Infrastructure.Presistance.Entities.AvailabilityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AvailabilityType")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("AvailableFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("AvailableTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UserOrganizationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserOrganizationId");

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("ClockiGo.Infrastructure.Presistance.Entities.OrganizationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("ClockiGo.Infrastructure.Presistance.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UserOrganizationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClockiGo.Infrastructure.Presistance.Entities.UserOrganizationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<byte>("Role")
                        .HasColumnType("smallint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserOrganizations");
                });

            modelBuilder.Entity("ClockiGo.Infrastructure.Presistance.Entities.AvailabilityEntity", b =>
                {
                    b.HasOne("ClockiGo.Infrastructure.Presistance.Entities.UserOrganizationEntity", "UserOrganization")
                        .WithMany("Availabilities")
                        .HasForeignKey("UserOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("UserOrganization");
                });

            modelBuilder.Entity("ClockiGo.Infrastructure.Presistance.Entities.UserOrganizationEntity", b =>
                {
                    b.HasOne("ClockiGo.Infrastructure.Presistance.Entities.OrganizationEntity", "Organization")
                        .WithMany("UserOrganizations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClockiGo.Infrastructure.Presistance.Entities.UserEntity", "User")
                        .WithOne("UserOrganization")
                        .HasForeignKey("ClockiGo.Infrastructure.Presistance.Entities.UserOrganizationEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClockiGo.Infrastructure.Presistance.Entities.OrganizationEntity", b =>
                {
                    b.Navigation("UserOrganizations");
                });

            modelBuilder.Entity("ClockiGo.Infrastructure.Presistance.Entities.UserEntity", b =>
                {
                    b.Navigation("UserOrganization");
                });

            modelBuilder.Entity("ClockiGo.Infrastructure.Presistance.Entities.UserOrganizationEntity", b =>
                {
                    b.Navigation("Availabilities");
                });
#pragma warning restore 612, 618
        }
    }
}
